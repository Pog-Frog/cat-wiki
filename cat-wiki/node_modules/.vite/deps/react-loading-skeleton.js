import {
  require_react
} from "./chunk-VOAEX4V5.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues,
  __toESM
} from "./chunk-IGMYUX52.js";

// node_modules/react-loading-skeleton/dist/index.mjs
var import_react = __toESM(require_react(), 1);
var SkeletonThemeContext = import_react.default.createContext({});
var defaultEnableAnimation = true;
function styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation }) {
  const style = {};
  if (direction === "rtl")
    style["--animation-direction"] = "reverse";
  if (typeof duration === "number")
    style["--animation-duration"] = `${duration}s`;
  if (!enableAnimation)
    style["--pseudo-element-display"] = "none";
  if (typeof width === "string" || typeof width === "number")
    style.width = width;
  if (typeof height === "string" || typeof height === "number")
    style.height = height;
  if (typeof borderRadius === "string" || typeof borderRadius === "number")
    style.borderRadius = borderRadius;
  if (circle)
    style.borderRadius = "50%";
  if (typeof baseColor !== "undefined")
    style["--base-color"] = baseColor;
  if (typeof highlightColor !== "undefined")
    style["--highlight-color"] = highlightColor;
  return style;
}
function Skeleton(_a) {
  var _b = _a, { count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp } = _b, originalPropsStyleOptions = __objRest(_b, ["count", "wrapper", "className", "containerClassName", "containerTestId", "circle", "style"]);
  var _a2, _b2;
  const contextStyleOptions = import_react.default.useContext(SkeletonThemeContext);
  const propsStyleOptions = __spreadValues({}, originalPropsStyleOptions);
  for (const [key, value] of Object.entries(originalPropsStyleOptions)) {
    if (typeof value === "undefined") {
      delete propsStyleOptions[key];
    }
  }
  const styleOptions = __spreadProps(__spreadValues(__spreadValues({}, contextStyleOptions), propsStyleOptions), {
    circle
  });
  const style = __spreadValues(__spreadValues({}, styleProp), styleOptionsToCssProperties(styleOptions));
  let className = "react-loading-skeleton";
  if (customClassName)
    className += ` ${customClassName}`;
  const inline = (_a2 = styleOptions.inline) !== null && _a2 !== void 0 ? _a2 : false;
  const elements = [];
  for (let i = 0; i < count; i++) {
    const skeletonSpan = import_react.default.createElement("span", { className, style, key: i }, "\u200C");
    if (inline) {
      elements.push(skeletonSpan);
    } else {
      elements.push(import_react.default.createElement(import_react.default.Fragment, { key: i }, skeletonSpan, import_react.default.createElement("br", null)));
    }
  }
  return import_react.default.createElement("span", { className: containerClassName, "data-testid": containerTestId, "aria-live": "polite", "aria-busy": (_b2 = styleOptions.enableAnimation) !== null && _b2 !== void 0 ? _b2 : defaultEnableAnimation }, Wrapper ? elements.map((el, i) => import_react.default.createElement(Wrapper, { key: i }, el)) : elements);
}
function SkeletonTheme(_a) {
  var _b = _a, { children } = _b, styleOptions = __objRest(_b, ["children"]);
  return import_react.default.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children);
}

// dep:react-loading-skeleton
var react_loading_skeleton_default = Skeleton;
export {
  SkeletonTheme,
  react_loading_skeleton_default as default
};
//# sourceMappingURL=react-loading-skeleton.js.map
